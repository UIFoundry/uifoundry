{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "coming-soon-1",
  "type": "registry:block",
  "title": "Coming Soon 1",
  "description": "Coming Soon Block with countdown timer, email signup, and social links",
  "dependencies": [
    "react",
    "next",
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "input",
    "@uifoundry/animated-group",
    "@uifoundry/text-effect",
    "@uifoundry/header-field",
    "@uifoundry/subheader-field",
    "@uifoundry/style-utils",
    "@uifoundry/social-links-field",
    "@uifoundry/block-constants"
  ],
  "files": [
    {
      "path": "registry/payload/blocks/coming-soon/coming-soon-1/index.tsx",
      "content": "\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/registry/default/ui/button\";\nimport { Input } from \"@/registry/default/ui/input\";\nimport { TextEffect } from \"@/registry/default/ui/motion-primitives/text-effect\";\nimport { AnimatedGroup } from \"@/registry/default/ui/motion-primitives/animated-group\";\nimport type { ComingSoon_1_Block } from \"~/payload-types\";\n\nimport { cn } from \"@/registry/default/utils\";\nimport SocialIcon from \"@/registry/default/lib/fields/socialLinks\";\nimport { Mail } from \"lucide-react\";\n\ninterface TimeLeft {\n\tdays: number;\n\thours: number;\n\tminutes: number;\n\tseconds: number;\n}\n\nconst transitionVariants = {\n\titem: {\n\t\thidden: {\n\t\t\topacity: 0,\n\t\t\tfilter: \"blur(12px)\",\n\t\t\ty: 12,\n\t\t},\n\t\tvisible: {\n\t\t\topacity: 1,\n\t\t\tfilter: \"blur(0px)\",\n\t\t\ty: 0,\n\t\t\ttransition: {\n\t\t\t\ttype: \"spring\",\n\t\t\t\tbounce: 0.3,\n\t\t\t\tduration: 1.5,\n\t\t\t},\n\t\t},\n\t},\n};\n\nfunction calculateTimeLeft(targetDate: string): TimeLeft {\n\tconst difference = +new Date(targetDate) - +new Date();\n\n\tif (difference > 0) {\n\t\treturn {\n\t\t\tdays: Math.floor(difference / (1000 * 60 * 60 * 24)),\n\t\t\thours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n\t\t\tminutes: Math.floor((difference / 1000 / 60) % 60),\n\t\t\tseconds: Math.floor((difference / 1000) % 60),\n\t\t};\n\t}\n\n\treturn { days: 0, hours: 0, minutes: 0, seconds: 0 };\n}\n\nexport default function ComingSoonSection(props: ComingSoon_1_Block) {\n\tconst [timeLeft, setTimeLeft] = useState<TimeLeft>({\n\t\tdays: 0,\n\t\thours: 0,\n\t\tminutes: 0,\n\t\tseconds: 0,\n\t});\n\tconst [email, setEmail] = useState(\"\");\n\tconst [isSubmitted, setIsSubmitted] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (!props.launchDate) return;\n\n\t\tconst timer = setInterval(() => {\n\t\t\tsetTimeLeft(calculateTimeLeft(props.launchDate));\n\t\t}, 1000);\n\n\t\treturn () => clearInterval(timer);\n\t}, [props.launchDate]);\n\n\tconst handleEmailSubmit = (e: React.FormEvent) => {\n\t\te.preventDefault();\n\t\t// Handle email submission here\n\t\tconsole.log(\"Email submitted:\", email);\n\t\tsetIsSubmitted(true);\n\t\tsetEmail(\"\");\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cn(\n\t\t\t\t\"relative flex min-h-screen items-center justify-center overflow-hidden\",\n\t\t\t)}\n\t\t>\n\t\t\t<section className=\"relative z-10 w-full\">\n\t\t\t\t<div className=\"mx-auto max-w-4xl px-6 text-center\">\n\t\t\t\t\t<AnimatedGroup\n\t\t\t\t\t\tvariants={{\n\t\t\t\t\t\t\tcontainer: {\n\t\t\t\t\t\t\t\tvisible: {\n\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\tstaggerChildren: 0.1,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\titem: {\n\t\t\t\t\t\t\t\thidden: {\n\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t\ty: 20,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tvisible: {\n\t\t\t\t\t\t\t\t\topacity: 1,\n\t\t\t\t\t\t\t\t\ty: 0,\n\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\ttype: \"spring\",\n\t\t\t\t\t\t\t\t\t\tbounce: 0.3,\n\t\t\t\t\t\t\t\t\t\tduration: 1.5,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextEffect\n\t\t\t\t\t\t\tpreset=\"fade-in-blur\"\n\t\t\t\t\t\t\tspeedSegment={0.3}\n\t\t\t\t\t\t\tas=\"h1\"\n\t\t\t\t\t\t\tclassName=\"mb-6 text-5xl font-bold text-balance md:text-6xl lg:text-7xl\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.header ?? \"Something Amazing is Coming\"}\n\t\t\t\t\t\t</TextEffect>\n\n\t\t\t\t\t\t<TextEffect\n\t\t\t\t\t\t\tper=\"line\"\n\t\t\t\t\t\t\tpreset=\"fade-in-blur\"\n\t\t\t\t\t\t\tspeedSegment={0.3}\n\t\t\t\t\t\t\tdelay={0.3}\n\t\t\t\t\t\t\tas=\"p\"\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground mx-auto mb-12 max-w-2xl text-xl text-balance\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.subheader ??\n\t\t\t\t\t\t\t\t\"We're working hard to bring you something special. Stay tuned!\"}\n\t\t\t\t\t\t</TextEffect>\n\n\t\t\t\t\t\t{/* Countdown Timer */}\n\t\t\t\t\t\t{props.launchDate && (\n\t\t\t\t\t\t\t<AnimatedGroup\n\t\t\t\t\t\t\t\t// @ts-expect-error mismatch anim group type\n\t\t\t\t\t\t\t\tvariants={{\n\t\t\t\t\t\t\t\t\tcontainer: {\n\t\t\t\t\t\t\t\t\t\tvisible: {\n\t\t\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\t\t\tstaggerChildren: 0.05,\n\t\t\t\t\t\t\t\t\t\t\t\tdelayChildren: 0.6,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t...transitionVariants,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"mb-12\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"mx-auto grid max-w-md grid-cols-2 gap-4 md:grid-cols-4\">\n\t\t\t\t\t\t\t\t\t{[\n\t\t\t\t\t\t\t\t\t\t{ label: \"Days\", value: timeLeft.days },\n\t\t\t\t\t\t\t\t\t\t{ label: \"Hours\", value: timeLeft.hours },\n\t\t\t\t\t\t\t\t\t\t{ label: \"Minutes\", value: timeLeft.minutes },\n\t\t\t\t\t\t\t\t\t\t{ label: \"Seconds\", value: timeLeft.seconds },\n\t\t\t\t\t\t\t\t\t].map((item) => (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tkey={item.label}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg-card rounded-lg border p-4 shadow-sm\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-primary text-3xl font-bold\">\n\t\t\t\t\t\t\t\t\t\t\t\t{item.value.toString().padStart(2, \"0\")}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-muted-foreground text-sm\">\n\t\t\t\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</AnimatedGroup>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{/* Email Signup */}\n\t\t\t\t\t\t{props.showEmailSignup && (\n\t\t\t\t\t\t\t<AnimatedGroup\n\t\t\t\t\t\t\t\t// @ts-expect-error mismatch anim group type\n\t\t\t\t\t\t\t\tvariants={{\n\t\t\t\t\t\t\t\t\tcontainer: {\n\t\t\t\t\t\t\t\t\t\tvisible: {\n\t\t\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\t\t\tstaggerChildren: 0.05,\n\t\t\t\t\t\t\t\t\t\t\t\tdelayChildren: 0.9,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t...transitionVariants,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"mb-12\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{!isSubmitted ? (\n\t\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\t\tonSubmit={handleEmailSubmit}\n\t\t\t\t\t\t\t\t\t\tclassName=\"mx-auto max-w-md\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.emailPlaceholder ?? \"Enter your email\"\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"flex-1\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\" className=\"px-6\">\n\t\t\t\t\t\t\t\t\t\t\t\t{props.emailButtonText ?? \"Notify me\"}\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-2 text-green-600\">\n\t\t\t\t\t\t\t\t\t\t<Mail className=\"h-5 w-5\" />\n\t\t\t\t\t\t\t\t\t\t<span>Thanks! We&apos;ll notify you when we launch.</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</AnimatedGroup>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{/* Social Links */}\n\t\t\t\t\t\t{props.showSocialLinks &&\n\t\t\t\t\t\t\tprops.socialLinks &&\n\t\t\t\t\t\t\tprops.socialLinks.length > 0 && (\n\t\t\t\t\t\t\t\t<AnimatedGroup\n\t\t\t\t\t\t\t\t\t// @ts-expect-error mismatch anim group type\n\t\t\t\t\t\t\t\t\tvariants={{\n\t\t\t\t\t\t\t\t\t\tcontainer: {\n\t\t\t\t\t\t\t\t\t\t\tvisible: {\n\t\t\t\t\t\t\t\t\t\t\t\ttransition: {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstaggerChildren: 0.05,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdelayChildren: 1.2,\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t...transitionVariants,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"flex justify-center gap-4\">\n\t\t\t\t\t\t\t\t\t\t{props.socialLinks.map((link, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<SocialIcon\n\t\t\t\t\t\t\t\t\t\t\t\ticon={link.icon}\n\t\t\t\t\t\t\t\t\t\t\t\thref={link.href}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`${index}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</AnimatedGroup>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t</AnimatedGroup>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component",
      "target": "src/payload/blocks/ComingSoon/ComingSoon_1/index.tsx"
    },
    {
      "path": "registry/payload/blocks/coming-soon/coming-soon-1/config.ts",
      "content": "import {\n\tBLOCK_GROUP_COMING_SOON,\n\tBLOCK_SLUG_COMING_SOON_1,\n} from \"@/registry/default/lib/constants/blocks\";\nimport type { Block } from \"payload\";\nimport headerField from \"@/registry/default/lib/fields/header/config\";\nimport subHeaderField from \"@/registry/default/lib/fields/subheader/config\";\nimport socialLinksField from \"@/registry/default/lib/fields/socialLinks/config\";\n\nexport const ComingSoon_1_Block: Block = {\n\tslug: BLOCK_SLUG_COMING_SOON_1,\n\tlabels: {\n\t\tsingular: \"Coming Soon 1\",\n\t\tplural: \"Coming Soon 1's\",\n\t},\n\tadmin: {\n\t\tgroup: BLOCK_GROUP_COMING_SOON,\n\t},\n\tinterfaceName: \"ComingSoon_1_Block\",\n\tfields: [\n\t\theaderField(),\n\t\tsubHeaderField(),\n\t\t{\n\t\t\ttype: \"collapsible\",\n\t\t\tlabel: \"Launch Date\",\n\t\t\tadmin: {\n\t\t\t\tinitCollapsed: false,\n\t\t\t},\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tname: \"launchDate\",\n\t\t\t\t\tlabel: \"Launch Date\",\n\t\t\t\t\ttype: \"date\",\n\t\t\t\t\trequired: true,\n\t\t\t\t\tadmin: {\n\t\t\t\t\t\tdescription: \"The date when your project will launch\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\ttype: \"collapsible\",\n\t\t\tlabel: \"Email Signup\",\n\t\t\tadmin: {\n\t\t\t\tinitCollapsed: true,\n\t\t\t},\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tname: \"showEmailSignup\",\n\t\t\t\t\tlabel: \"Show Email Signup\",\n\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\tdefaultValue: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"emailPlaceholder\",\n\t\t\t\t\tlabel: \"Email Input Placeholder\",\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tdefaultValue: \"Enter your email\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"emailButtonText\",\n\t\t\t\t\tlabel: \"Email Button Text\",\n\t\t\t\t\ttype: \"text\",\n\t\t\t\t\tdefaultValue: \"Notify me\",\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\ttype: \"collapsible\",\n\t\t\tlabel: \"Social Links\",\n\t\t\tadmin: {\n\t\t\t\tinitCollapsed: true,\n\t\t\t},\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tname: \"showSocialLinks\",\n\t\t\t\t\tlabel: \"Show Social Links\",\n\t\t\t\t\ttype: \"checkbox\",\n\t\t\t\t\tdefaultValue: false,\n\t\t\t\t},\n\t\t\t\tsocialLinksField({\n\t\t\t\t\tname: \"socialLinks\",\n\t\t\t\t}),\n\t\t\t],\n\t\t},\n\t],\n};\n",
      "type": "registry:component",
      "target": "src/payload/blocks/ComingSoon/ComingSoon_1/config.ts"
    }
  ]
}