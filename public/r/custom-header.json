{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "custom-header",
  "type": "registry:block",
  "title": "Custom Header",
  "description": "Fully customizable header component with nested blocks for brand logo, menu items, and buttons",
  "dependencies": [
    "react",
    "next",
    "payload",
    "lucide-react"
  ],
  "registryDependencies": [
    "@uifoundry/style-utils",
    "@uifoundry/renderblocks",
    "@uifoundry/header-brand-logo",
    "@uifoundry/header-menu-button",
    "@uifoundry/header-menu-items"
  ],
  "files": [
    {
      "path": "registry/payload/blocks/custom-header/config.ts",
      "content": "import type { Block } from \"payload\";\nimport { BLOCK_SLUG_CUSTOM_HEADER } from \"@/registry/default/lib/constants/blocks\";\nimport { blocks } from \"./blocks\";\n\nexport const CustomHeaderBlock: Block = {\n  slug: BLOCK_SLUG_CUSTOM_HEADER,\n  interfaceName: \"CustomHeaderBlock\",\n  fields: [\n    {\n      name: \"items\",\n      type: \"blocks\",\n      blocks: blocks,\n    },\n  ],\n};\n",
      "type": "registry:component",
      "target": "src/payload/blocks/Header/CustomHeader/config.ts"
    },
    {
      "path": "registry/payload/blocks/custom-header/index.tsx",
      "content": "\"use client\";\n\nimport type { CustomHeaderBlock } from \"~/payload-types\";\nimport RenderBlocks from \"@/registry/default/components/RenderBlocks\";\nimport { useEffect, useState } from \"react\";\nimport { cn } from \"@/registry/default/utils\";\nimport { blockComponents } from \"./blocks\";\nimport { Menu, X } from \"lucide-react\";\nimport { BLOCK_SLUG_HEADER_MENU_ITEMS } from \"@/registry/default/lib/constants/blocks\";\n\nexport default function Header({\n\tpreview = false,\n\titems,\n}: {\n\tpreview?: boolean;\n} & CustomHeaderBlock) {\n\tconst [menuState, setMenuState] = useState(false);\n\tconst [isScrolled, setIsScrolled] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst handleScroll = () => {\n\t\t\tsetIsScrolled(window.scrollY > 50);\n\t\t};\n\t\twindow.addEventListener(\"scroll\", handleScroll);\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", handleScroll);\n\t\t};\n\t});\n\n\treturn (\n\t\t<header>\n\t\t\t<nav\n\t\t\t\tdata-state={menuState && \"active\"}\n\t\t\t\tid=\"header\"\n\t\t\t\tclassName={cn(\"fixed z-20 w-full px-2\", preview && \"relative\")}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\"mx-auto mt-4 mb-8 max-w-6xl px-6 transition-all duration-300 lg:px-12\",\n\t\t\t\t\t\tisScrolled &&\n\t\t\t\t\t\t\"bg-background/50 max-w-4xl rounded-2xl border backdrop-blur-lg lg:px-5\",\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"relative flex flex-wrap items-center justify-between gap-6 px-4 py-3 lg:gap-0 lg:py-4\">\n\t\t\t\t\t\t<div className=\"flex justify-between lg:w-auto\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => setMenuState(!menuState)}\n\t\t\t\t\t\t\t\taria-label={menuState == true ? \"Close Menu\" : \"Open Menu\"}\n\t\t\t\t\t\t\t\tclassName=\"relative z-20 -m-2.5 -mr-4 block cursor-pointer p-2.5 lg:hidden\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Menu className=\"m-auto size-6 duration-200 in-data-[state=active]:scale-0 in-data-[state=active]:rotate-180 in-data-[state=active]:opacity-0\" />\n\t\t\t\t\t\t\t\t<X className=\"absolute inset-0 m-auto size-6 scale-0 -rotate-180 opacity-0 duration-200 in-data-[state=active]:scale-100 in-data-[state=active]:rotate-0 in-data-[state=active]:opacity-100\" />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"flex w-full items-center justify-between\">\n\t\t\t\t\t\t\t<div className=\"relative flex items-center\">\n\t\t\t\t\t\t\t\t<RenderBlocks\n\t\t\t\t\t\t\t\t\tblocks={(items ?? []).filter((i) => i.alignment === \"left\")}\n\t\t\t\t\t\t\t\t\tblockComponents={blockComponents}\n\t\t\t\t\t\t\t\t\tclassName={cn(\"w-full\")}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"relative flex items-center\">\n\t\t\t\t\t\t\t\t<RenderBlocks\n\t\t\t\t\t\t\t\t\tblocks={(items ?? []).filter((i) => i.alignment === \"center\")}\n\t\t\t\t\t\t\t\t\tblockComponents={blockComponents}\n\t\t\t\t\t\t\t\t\tclassName={cn(\"w-full\")}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"relative flex items-center\">\n\t\t\t\t\t\t\t\t<RenderBlocks\n\t\t\t\t\t\t\t\t\tblocks={(items ?? []).filter((i) => i.alignment === \"right\")}\n\t\t\t\t\t\t\t\t\tblockComponents={blockComponents}\n\t\t\t\t\t\t\t\t\tclassName={cn(\"w-full\")}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"bg-background absolute top-[125%] z-10 mb-6 hidden size-fit w-full flex-wrap items-center justify-end space-y-8 rounded-3xl border p-6 shadow-2xl shadow-zinc-300/20 in-data-[state=active]:block md:flex-nowrap lg:m-0 lg:flex lg:w-fit lg:gap-6 lg:space-y-0 lg:border-transparent lg:bg-transparent lg:p-0 lg:shadow-none lg:in-data-[state=active]:flex dark:shadow-none dark:lg:bg-transparent\">\n\t\t\t\t\t\t\t<div className=\"lg:hidden\">\n\t\t\t\t\t\t\t\t<RenderBlocks\n\t\t\t\t\t\t\t\t\tisMobile={true}\n\t\t\t\t\t\t\t\t\tblocks={\n\t\t\t\t\t\t\t\t\t\t(items ?? []).filter(\n\t\t\t\t\t\t\t\t\t\t\t(i) => i.blockType === BLOCK_SLUG_HEADER_MENU_ITEMS,\n\t\t\t\t\t\t\t\t\t\t) ?? []\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tblockComponents={blockComponents}\n\t\t\t\t\t\t\t\t\tclassName={cn(\"w-full\")}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</header>\n\t);\n}\n",
      "type": "registry:component",
      "target": "src/payload/blocks/Header/CustomHeader/index.tsx"
    },
    {
      "path": "registry/payload/blocks/custom-header/blocks.ts",
      "content": "import type { Block } from \"payload\";\nimport { HeaderMenuItemsBlock } from \"./MenuItems/config\";\nimport HeaderMenuItems from \"./MenuItems\";\nimport { HeaderMenuButtonBlock } from \"./MenuButton/config\";\nimport HeaderMenuButton from \"./MenuButton\";\nimport { HeaderBrandLogoBlock } from \"./BrandLogo/config\";\nimport HeaderBrandLogo from \"./BrandLogo\";\n\nimport {\n\tBLOCK_SLUG_HEADER_BRAND_LOGO,\n\tBLOCK_SLUG_HEADER_MENU_BUTTON,\n\tBLOCK_SLUG_HEADER_MENU_ITEMS,\n} from \"@/registry/default/lib/constants/blocks\";\n\nexport const blocks: Block[] = [\n\tHeaderMenuItemsBlock,\n\tHeaderMenuButtonBlock,\n\tHeaderBrandLogoBlock,\n];\n\nexport const blockComponents = {\n\t[BLOCK_SLUG_HEADER_MENU_ITEMS]: HeaderMenuItems,\n\t[BLOCK_SLUG_HEADER_MENU_BUTTON]: HeaderMenuButton,\n\t[BLOCK_SLUG_HEADER_BRAND_LOGO]: HeaderBrandLogo,\n};\n",
      "type": "registry:component",
      "target": "src/payload/blocks/Header/CustomHeader/blocks.ts"
    }
  ]
}