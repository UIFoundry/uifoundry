{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing-1",
  "type": "registry:component",
  "description": "Pricing block variant 1",
  "dependencies": [
    "react",
    "next/link",
    "lucide-react"
  ],
  "devDependencies": [],
  "registryDependencies": [
    "button",
    "card"
  ],
  "files": [
    {
      "path": "registry/components/pricing-1/meta.json",
      "type": "registry:component",
      "content": "{\n  \"name\": \"pricing-1\",\n  \"type\": \"components:component\",\n  \"description\": \"Pricing block variant 1 from UIFoundry\",\n  \"files\": [\n    {\n      \"name\": \"pricing-1.tsx\",\n      \"content\": \"import React from \\\"react\\\";\\n\\ninterface ComponentProps {\\n  header?: string;\\n  subheader?: string;\\n  alertLabel?: string;\\n  alertLink?: string;\\n  media?: {\\n    light?: { url: string; alt: string };\\n    dark?: { url: string; alt: string };\\n  };\\n  actions?: Array<{ label?: string; href?: string }>;\\n  features?: Array<{ title?: string; description?: string; icon?: string }>;\\n  faqs?: Array<{ question?: string; answer?: string }>;\\n  members?: Array<{ name?: string; role?: string; bio?: string }>;\\n  stats?: Array<{ label?: string; value?: string }>;\\n  testimonials?: Array<{ content?: string; author?: string; role?: string }>;\\n  [key: string]: any;\\n}\\n\\nimport Link from \\\"next/link\\\";\\nimport { Button } from \\\"@/components/ui/button\\\";\\nimport {\\n\\tCard,\\n\\tCardContent,\\n\\tCardDescription,\\n\\tCardHeader,\\n\\tCardTitle,\\n} from \\\"~/ui/card\\\";\\nimport { Check } from \\\"lucide-react\\\";\\n\\nimport type { ComponentPropsWithRef } from \\\"react\\\";\\nimport { cn } from \\\"@/lib/utils\\\";\\n\\nfunction PricingTier({\\n\\ttier,\\n\\tindex,\\n\\tfocusedTier = {\\n\\t\\tindex: -1,\\n\\t\\tlabel: \\\"Popular\\\",\\n\\t},\\n\\t...divProps\\n}: {\\n\\ttier: NonNullable<Pricing_1_Block[\\\"tiers\\\"]>[number];\\n\\tindex: number;\\n\\tfocusedTier?: {\\n\\t\\tindex: number;\\n\\t\\tlabel: string;\\n\\t};\\n} & ComponentPropsWithRef<\\\"div\\\">) {\\n\\tif (!tier) return null;\\n\\n\\tconst annualPricing = tier.pricing.annual;\\n\\tconst monthlyPricing = tier.pricing.monthly;\\n\\tconst isFocused = focusedTier.index === index;\\n\\n\\treturn (\\n\\t\\t<Card className=\\\"relative my-8 basis-1/2 md:my-0\\\" {...divProps}>\\n\\t\\t\\t<span\\n\\t\\t\\t\\tclassName={cn(\\n\\t\\t\\t\\t\\t\\\"absolute inset-x-0 -top-3 mx-auto flex h-6 w-fit items-center rounded-full bg-linear-to-br/increasing from-purple-400 to-amber-300 px-3 py-1 text-xs font-medium text-amber-950 ring-1 ring-white/20 ring-offset-1 ring-offset-gray-950/5 ring-inset\\\",\\n\\t\\t\\t\\t\\t!isFocused && \\\"hidden\\\",\\n\\t\\t\\t\\t)}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{focusedTier.label}\\n\\t\\t\\t</span>\\n\\t\\t\\t<CardHeader>\\n\\t\\t\\t\\t<CardTitle className=\\\"font-medium\\\">{tier.label}</CardTitle>\\n\\n\\t\\t\\t\\t<span className=\\\"my-3 block text-2xl font-semibold\\\">\\n\\t\\t\\t\\t\\t${tier.pricing.value}\\n\\t\\t\\t\\t\\t{annualPricing ? \\\" / yr\\\" : monthlyPricing ? \\\" / mo\\\" : \\\"\\\"}\\n\\t\\t\\t\\t</span>\\n\\n\\t\\t\\t\\t{tier.description && (\\n\\t\\t\\t\\t\\t<CardDescription className=\\\"text-sm\\\">\\n\\t\\t\\t\\t\\t\\t{tier.description}\\n\\t\\t\\t\\t\\t</CardDescription>\\n\\t\\t\\t\\t)}\\n\\t\\t\\t\\t<Button\\n\\t\\t\\t\\t\\tasChild\\n\\t\\t\\t\\t\\tvariant={!isFocused ? \\\"outline\\\" : undefined}\\n\\t\\t\\t\\t\\tclassName=\\\"mt-4 w-full\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<Link href=\\\"\\\">{tier.callToAction ?? \\\"Get Started\\\"}</Link>\\n\\t\\t\\t\\t</Button>\\n\\t\\t\\t</CardHeader>\\n\\n\\t\\t\\t<CardContent className=\\\"space-y-4\\\">\\n\\t\\t\\t\\t<hr className=\\\"border-dashed\\\" />\\n\\n\\t\\t\\t\\t<ul className=\\\"list-outside space-y-3 text-sm\\\">\\n\\t\\t\\t\\t\\t{(tier.features ?? []).map((feature, index) => (\\n\\t\\t\\t\\t\\t\\t<li\\n\\t\\t\\t\\t\\t\\t\\tkey={`Pricing_1_Block-tier-${tier.label}-feature-${index}`}\\n\\t\\t\\t\\t\\t\\t\\tclassName=\\\"flex items-center gap-2\\\"\\n\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t<Check className=\\\"size-3\\\" />\\n\\t\\t\\t\\t\\t\\t\\t{feature.text}\\n\\t\\t\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</CardContent>\\n\\t\\t</Card>\\n\\t);\\n}\\n\\nexport default function Pricing(props: ComponentProps) {\\n\\treturn (\\n\\t\\t<section className=\\\"py-16 md:py-32\\\">\\n\\t\\t\\t<div className=\\\"mx-auto max-w-6xl px-6\\\">\\n\\t\\t\\t\\t<div className=\\\"mx-auto max-w-2xl space-y-6 text-center\\\">\\n\\t\\t\\t\\t\\t<h1 className=\\\"text-center text-4xl font-semibold lg:text-5xl\\\">\\n\\t\\t\\t\\t\\t\\t{props?.header ?? \\\"\\\"}\\n\\t\\t\\t\\t\\t</h1>\\n\\t\\t\\t\\t\\t<p>{props?.subheader ?? \\\"\\\"}</p>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div className=\\\"mt-8 justify-center gap-6 md:mt-20 md:flex\\\">\\n\\t\\t\\t\\t\\t{(props?.tiers ?? []).map((tier, index) => (\\n\\t\\t\\t\\t\\t\\t<PricingTier\\n\\t\\t\\t\\t\\t\\t\\ttier={tier}\\n\\t\\t\\t\\t\\t\\t\\tindex={index}\\n\\t\\t\\t\\t\\t\\t\\tfocusedTier={{\\n\\t\\t\\t\\t\\t\\t\\t\\tindex: props?.focusIndex ?? -1,\\n\\t\\t\\t\\t\\t\\t\\t\\tlabel: props?.focusLabel ?? \\\"Popular\\\",\\n\\t\\t\\t\\t\\t\\t\\t}}\\n\\t\\t\\t\\t\\t\\t\\tkey={`Pricing_1_Block-${index}`}\\n\\t\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t))}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</section>\\n\\t);\\n}\"\n    }\n  ],\n  \"dependencies\": [\n    \"next/link\",\n    \"lucide-react\",\n    \"react\"\n  ],\n  \"registryDependencies\": [\n    \"button\"\n  ],\n  \"category\": \"pricing\",\n  \"tags\": [\n    \"pricing\",\n    \"uifoundry\",\n    \"block\"\n  ]\n}",
      "target": "meta.json"
    },
    {
      "path": "registry/components/pricing-1/pricing-1.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport Link from \"next/link\";\nimport { Button } from \"~/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"~/ui/card\";\nimport { Check } from \"lucide-react\";\nimport { cn } from \"~/styles/utils\";\n\ninterface TierFeature {\n  text?: string;\n}\ninterface Tier {\n  label?: string;\n  description?: string;\n  pricing: { value: number; annual?: boolean; monthly?: boolean };\n  callToAction?: string;\n  features?: TierFeature[];\n}\n\ninterface ComponentProps {\n  header?: string;\n  subheader?: string;\n  tiers?: Tier[];\n  focusIndex?: number;\n  focusLabel?: string;\n}\n\nfunction PricingTier({\n  tier,\n  index,\n  focusedTier = { index: -1, label: \"Popular\" },\n  ...divProps\n}: {\n  tier: Tier;\n  index: number;\n  focusedTier?: { index: number; label: string };\n} & React.ComponentPropsWithoutRef<\"div\">) {\n  if (!tier) return null;\n  const isFocused = focusedTier.index === index;\n\n  return (\n    <Card className=\"relative my-8 basis-1/2 md:my-0\" {...divProps}>\n      <span\n        className={cn(\n          \"absolute inset-x-0 -top-3 mx-auto flex h-6 w-fit items-center rounded-full bg-linear-to-br/increasing from-purple-400 to-amber-300 px-3 py-1 text-xs font-medium text-amber-950 ring-1 ring-white/20 ring-offset-1 ring-offset-gray-950/5 ring-inset\",\n          !isFocused && \"hidden\",\n        )}\n      >\n        {focusedTier.label}\n      </span>\n      <CardHeader>\n        <CardTitle className=\"font-medium\">{tier.label}</CardTitle>\n        <span className=\"my-3 block text-2xl font-semibold\">\n          ${tier.pricing.value}\n          {tier.pricing.annual ? \" / yr\" : tier.pricing.monthly ? \" / mo\" : \"\"}\n        </span>\n        {tier.description && (\n          <CardDescription className=\"text-sm\">\n            {tier.description}\n          </CardDescription>\n        )}\n        <Button\n          asChild\n          variant={!isFocused ? \"outline\" : undefined}\n          className=\"mt-4 w-full\"\n        >\n          <Link href=\"#\">{tier.callToAction ?? \"Get Started\"}</Link>\n        </Button>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        <hr className=\"border-dashed\" />\n        <ul className=\"list-outside space-y-3 text-sm\">\n          {(tier.features ?? []).map((feature, idx) => (\n            <li\n              key={`pricing-tier-${index}-feature-${idx}`}\n              className=\"flex items-center gap-2\"\n            >\n              <Check className=\"size-3\" />\n              {feature.text}\n            </li>\n          ))}\n        </ul>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default function Pricing(props: ComponentProps) {\n  return (\n    <section className=\"py-16 md:py-32\">\n      <div className=\"mx-auto max-w-6xl px-6\">\n        <div className=\"mx-auto max-w-2xl space-y-6 text-center\">\n          <h1 className=\"text-center text-4xl font-semibold lg:text-5xl\">\n            {props?.header ?? \"\"}\n          </h1>\n          <p>{props?.subheader ?? \"\"}</p>\n        </div>\n\n        <div className=\"mt-8 justify-center gap-6 md:mt-20 md:flex\">\n          {(props?.tiers ?? []).map((tier, index) => (\n            <PricingTier\n              tier={tier}\n              index={index}\n              focusedTier={{\n                index: props?.focusIndex ?? -1,\n                label: props?.focusLabel ?? \"Popular\",\n              }}\n              key={`Pricing_1_Block-${index}`}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n",
      "target": "components/pricing-1.tsx"
    }
  ]
}